/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define DEFAULT 0
#define MOBILE  1
#define LOWER   2
#define MEDIA   3
#define BLUE    4

//  &left_encoder   { resolution = <2>; };
//  &left1_encoder  { resolution = <2>; };
//  &right_encoder  { resolution = <1>; };

#include <dt-bindings/led/led.h>

&spi1 {
        compatible = "nordic,nrf-spim";
        /* Cannot be used together with i2c0. */
        status = "okay";
        mosi-pin = <6>;
        // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
        sck-pin = <5>;
        miso-pin = <7>;

        led_strip: ws2812@0 {
                compatible = "worldsemi,ws2812-spi";
                label = "SK6812mini";

                /* SPI */
                reg = <0>; /* ignored, but necessary for SPI bindings */
                spi-max-frequency = <4000000>;

                /* WS2812 */
                chain-length = <7>; /* There are per-key RGB, but the first 6 are underglow */
                spi-one-frame = <0x70>;
                spi-zero-frame = <0x40>;

                color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
        };
};

/ {
        chosen {
                zmk,underglow = &led_strip;
        };
};

&mt {
    tapping-term-ms = <129>;
};

&lt {
    tapping-term-ms = <129>;
};


/ {
        combos {
                compatible = "zmk,combos";
                combo_lower {
                        timeout-ms = <50>;
                        key-positions = <14 15>;
                        bindings = <&mo 2>;
                };
                
                combo_media {
                        timeout-ms = <100>;
                        key-positions = <14 26>;
                        bindings = <&mo 3>;
                };
        };
};

/ {

    top_encoder: encoder_top {
                compatible = "alps,ec11";
                label = "TOP_ENCODER";
                a-gpios = <&pro_micro_d 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
                b-gpios = <&pro_micro_d 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
                resolution = <2>;
                status = "okay";
        };

    bottom_encoder: encoder_bottom {
                compatible = "alps,ec11";
                label = "BOTTOM_ENCODER";
                a-gpios = <&pro_micro_d 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
                b-gpios = <&pro_micro_d 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
                resolution = <2>;
                status = "okay";
        };

        sensors {
                    compatible = "zmk,keymap-sensors";
                    sensors = <&top_encoder &bottom_encoder>;
        };
};

        // TODO: per-key RGB node(s)?



/ {   
        behaviors {
        mtt: mod_tap_tap {
                compatible = "zmk,behavior-hold-tap";
                label = "MOD_TAP_TAP";
                #binding-cells = <2>;
                tapping-term-ms = <250>;
                quick-tap-ms = <100>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
              };
        mtt2: mod_tap_tap {
                compatible = "zmk,behavior-hold-tap";
                label = "MOD_TAP_TAP";
                #binding-cells = <2>;
                flavor = "tap-preferred"; //was hold-preferred
                tapping-term-ms = <230>;
                quick-tap-ms = <100>;
                bindings = <&kp>, <&kp>;
              };  
        };
};        

/ {
keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &trans &trans &trans &trans &trans &trans                                                     &trans &trans &trans &trans &trans &trans
   &trans &trans &mt SPACE N1 &kp W &mt E N4 &mtt LG(R) R                                        &trans &trans &trans &trans &trans &trans
   &trans &trans &mt LCTRL A &mt S LA(LG(S)) &kp D &kp F                                                       &trans &trans &trans &trans &trans &trans
                 &mt LSHFT Z &mt LALT X &mt LGUI C                                               &trans &trans &trans
                        >; 
                        
   sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp LEFT RIGHT>;
                };
      
                mobile_layer {
                        bindings = <
   &trans &trans &trans &trans &trans &trans                                              &trans &trans &trans &trans &trans &trans            
   &trans &trans &mt SPACE N1 &mt LA(LGUI) W &mt E N4 &mtt N0 R                                  &trans &trans &mt SPACE N1 &kp W &mt LA(LGUI) E &kp R
   &trans &trans &mt LCTRL A &mt S LA(LG(S)) &mt D LA(LG(D)) &kp F                                                &trans &trans &kp A &mt S T &kp D &kp F              
                 &mt LSHFT Z &mt LALT X &mt LGUI C                                                      &mt LALT Z &mt LSHFT X &mt LGUI C      
                        >;
                        
   sensor-bindings = <&inc_dec_kp LBKT RBKT &inc_dec_kp N2 N3>;
                };
      
                lower_layer {
                        bindings = <
   &trans &trans &trans &trans &trans &trans                                                     &trans &trans &trans &trans &trans &trans
   &trans &trans &none &none &kp BACKSPACE &kp G                                                &trans &trans &trans &trans &trans &trans
   &trans &trans &kp J &kp K &kp L &kp H                                                   &trans &trans &trans &trans &trans &trans
                 &kp LG(X) &kp LG(V) &kp LG(C)                                                     &trans &trans &trans
                        >;
   
   sensor-bindings = <&inc_dec_kp LG(G) LS(G) &inc_dec_kp MINUS EQUAL>;
                };

                media_layer {
                        bindings = <
   &trans &trans &trans &trans &trans &trans                                                     &trans &trans &trans &trans &trans &trans
   &trans &trans &none &kp C_RW &kp C_FF &lt BLUE F6                                          &trans &trans &trans &trans &trans &trans
   &trans &trans &none &kp C_SLOW2 &kp C_SLOW &tog 1                                                        &trans &trans &trans &trans &trans &trans
                 &kp LC(UP_ARROW) &kp RG(RA(N0)) &kp C_PLAY_PAUSE                                        &trans &trans &trans
                        >;
   
   sensor-bindings = <&inc_dec_kp LG(MINUS) LG(EQUAL) &inc_dec_kp C_VOL_DN C_VOL_UP>;
                };
                
                blue_layer {
                        bindings = <
   &trans &trans &trans &trans &trans &trans                                                     &trans &trans &trans &trans &trans &trans
   &trans &trans &bt BT_SEL 0 &rgb_ug RGB_SAD &rgb_ug RGB_SAI &none                            &trans &trans &trans &trans &trans &trans
   &trans &trans &bt BT_SEL 1 &rgb_ug RGB_BRD &rgb_ug RGB_BRI &rgb_ug RGB_TOG                             &trans &trans &trans &trans &trans &trans
                 &bt BT_CLR  &rgb_ug RGB_EFF &rgb_ug RGB_HUI                                     &trans &trans &trans
                        >;
                        
   sensor-bindings = <&inc_dec_kp &none &none &inc_dec_kp &none &none>;  
                };
            
        };
};


// &mmv {    
       // time-to-max-speed-ms = <500>;
       // acceleration-exponent=<1>;
// };
// &mwh {    
       // time-to-max-speed-ms = <2000>;
       // acceleration-exponent=<0>;
// }; 

// / {
       // behaviors {
               // mtt: mod_tap_tap {
                       // compatible = "zmk,behavior-hold-tap";
                       // label = "MOD_TAP_TAP";
                       // #binding-cells = <2>;
                       // flavor = "tap-preferred"; //was hold-preferred
                       // tapping-term-ms = <150>;
                       // quick-tap-ms = <200>;
                       // bindings = <&kp>, <&kp>;
               // };
               // ltt: layer_tap_tap {
                       // compatible = "zmk,behavior-hold-tap";
                       // label = "LAYER_TAP_TAP";
                       // #binding-cells = <2>;
                       // flavor = "hold-preferred"; 
                       // tapping-term-ms = <400>;
                       // quick-tap-ms = <200>;
                       // bindings = <&mo>, <&kp>;
               // };                
       // };



// / {
    //behaviors {
         //C_F: tap_dance_0 {
      //compatible = "zmk,behavior-tap-dance";
      //label = "C_F";
      //#binding-cells = <0>;
      //tapping-term-ms = <200>;
      //bindings = <&mt LSHFT C>, <&kp F>;
        //};
    //};

    //keymap {
        //compatible = "zmk,keymap";

        //default_layer {
            //bindings = <
                //&td_mt
            //>;
        //};
    //};
//};


// And label the key &C_F 
